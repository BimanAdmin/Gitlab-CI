stages:
  - install_dependencies
  - pulumi_up

variables:
  AWS_REGION: 'us-east-1'
  PULUMI_STACK: 'ec2automation-s3-gitlab'
  GITHUB_REPO_URL: 'https://gitlab.com/gitlab-cicd6911650/pulumi-automation.git'
  PULUMI_STATE_BUCKET: 'sandbox-pulumi-state-gitlab' # Set your Pulumi state bucket URL AWS_CREDENTIALS_ID
  npm_PATH: "/usr/share/npm:$npm_PATH"
  # AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID  # Add these variables in your GitLab CI/CD settings
  # AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY

before_script:
  - export AWS_ACCESS_KEY_ID=$(cat $AWS_ACCESS_KEY_ID)
  - export AWS_SECRET_ACCESS_KEY=$(cat $AWS_SECRET_ACCESS_KEY)
  - export PULUMI_CONFIG_PASSPHRASE=$(cat $PULUMI_CONFIG_PASSPHRASE)
  - export PULUMI_ACCESS_TOKEN=$(cat $PULUMI_ACCESS_TOKEN)

install_dependencies:
  stage: install_dependencies
  script:
    - curl -fsSL https://get.pulumi.com | sh
    - export PATH="/home/gitlab-runner/.pulumi/bin:$PATH"
  tags: 
    - test
  

# pulumi_up:
#   stage: pulumi_up
#   script:
#     - |
#       # Create a script file for Pulumi up command
#       cat <<EOF > pulumi-up.sh
#       #!/bin/bash
#       pulumi up --yes
#       EOF
#     - chmod +x pulumi-up.sh
#     - |
#       # Execute Pulumi up
#       pulumi login s3://${PULUMI_STATE_BUCKET}/${PULUMI_STACK}
#       export npm_PATH="/usr/share/npm:$npm_PATH"
#       npm install
#       npm install @pulumi/pulumi && npm install @pulumi/aws
#       stackList=$(pulumi stack ls --json | tr -d '[:space:]')
#       if [[ $stackList != *$PULUMI_STACK* ]]; then
#         pulumi stack init $PULUMI_STACK
#       else
#         pulumi stack select $PULUMI_STACK
#       fi
#       export PULUMI_CONFIG_PASSPHRASE="$PULUMI_CONFIG_PASSPHRASE"
#       ./pulumi-up.sh

#   tags: 
#     - test

pulumi_up:
  stage: pulumi_deploy
  script:
    - echo '#!/bin/bash' > pulumi-up.sh
    - echo 'pulumi up --yes' >> pulumi-up.sh
    - chmod +x pulumi-up.sh

    - pulumi login s3://your-pulumi-state-bucket?region=us-east-1

    - stackList=$(pulumi stack ls --json | tr -d '[:space:]')
    - stackExists=$(echo "$stackList" | grep -q "$PULUMI_STACK" && echo true || echo false)

    - if [ "$stackExists" == "false" ]; then pulumi stack init $PULUMI_STACK; else pulumi stack select $PULUMI_STACK; fi

    - curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -
    - sudo apt-get install -y nodejs
    - sudo apt update
    - npm install
    - node -v
    - npm -v
    - npm install @pulumi/pulumi @pulumi/aws
    - export PULUMI_CONFIG_PASSPHRASE="$PULUMI_CONFIG_PASSPHRASE"
    - ./pulumi-up.sh

only:
  - master