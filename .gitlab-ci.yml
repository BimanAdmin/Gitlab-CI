
stages:
  - install_dependencies
  - install_app
  - pulumi_up

variables:
  npm_PATH: "/usr/share/npm:$npm_PATH"

before_script:
  - sudo apt-get update -qy
  - sudo apt-get install -y curl
  - sudo apt-get install -y unzip
  - sudo apt-get install -y jq
  - sudo apt-get install -y dos2unix


install_dependencies:
  stage: install_dependencies
  script:
    - curl -fsSL https://get.pulumi.com | sh
    
  tags: 
    - test

install_app:
  stage: install_app
  script:
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - sudo ./aws/install --update
    
  tags: 
    - test

pulumi_up:
  stage: pulumi_up
  script:
    
    - echo '#!/bin/bash' > pulumi-up.sh
    - echo 'pulumi up --yes' >> pulumi-up.sh
    - chmod +x pulumi-up.sh
    - export PATH="/home/gitlab-runner/.pulumi/bin:$PATH"
    
    - export PULUMI_CONFIG_PASSPHRASE="$PULUMI_CONFIG_PASSPHRASE"
    - export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID"
    - export AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY"

    - pulumi login s3://sandbox-pulumi-state-gitlab-01?region=us-east-1

    - PULUMI_STACK_LIST=$(pulumi stack ls --json | tr -d '\n' | tr -d '[:space:]')
    - stackExists=$(echo "$PULUMI_STACK_LIST" | grep -c "$PULUMI_STACK")
    #- stackExists=$(echo "$stackList" | grep -q "$PULUMI_STACK" && echo true || echo false)
    - | 
      if [ "$stackExists" -eq 0 ]; then
        pulumi stack init ${PULUMI_STACK}
      else
        pulumi stack select ${PULUMI_STACK}
      fi

    - curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -
    - sudo apt-get install -y nodejs
    - sudo apt update
    - npm install
    - node -v
    - npm -v
    - npm install @pulumi/pulumi @pulumi/aws
    - export PULUMI_CONFIG_PASSPHRASE="$PULUMI_CONFIG_PASSPHRASE"
    - ./pulumi-up.sh

  only:
    - master

  tags: 
    - test